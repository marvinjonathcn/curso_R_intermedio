# Para limpiar el workspace:
rm(list = ls())
library(ggplot2)
library(ggplot2)
library(httr)
library(DataExplorer)
library(ggplot2)
library(httr)
library(DataExplorer)
library(ggplot2)
library(httr)
library(DataExplorer)
library(ggplot2)
library(httr)
library(DataExplorer)
r <- GET("https://www.senamhi.gob.pe/site/sea/www/site/sea/graficas/dato_hora.php?estacion=112194&cont=N_PM25&f1=01/01/2020&f2=31/12/2020")
View(r)
s <- content(r, "text")
s
s <- content(r, "text")
s
s_split1 <- strsplit(s, 'radius: 0,')[[1]][3]
s_split1
s_split2 <- strsplit(s_split1, "[")[[1]][2]
s_split2 <- strsplit(s_split1, "\\[")[[1]][2]
s_split2
s_split2
s_split3 <- strsplit(s_split2, ',]')[[1]][1]
s_split3
s2_split1 <- strsplit(s, 'xAxis: \\{')[[1]][2]
s2_split2 <- strsplit(s2_split1, "\\[")[[1]][2]
s2_split1
s2_split2 <- strsplit(s2_split1, "\\[")[[1]][2]
s2_split2
s2_split3 <- strsplit(s2_split2, ',]')[[1]][1]
s2_split3
values_df <- data.frame()
s2_split3
for (i in 1:length(values_o[[1]])){
values_df[i,1] <- as.numeric(values_o[[1]][i])
}
values_o <- strsplit(s_split3, ",")
for (i in 1:length(values_o[[1]])){
values_df[i,1] <- as.numeric(values_o[[1]][i])
}
View(values_df)
s2_split3
for (i in 1:length(date_o[[1]])){
date_1 <- as.character(date_o[[1]][i])
date_2 <- substr(date_1, 2, 16 )
date_df[i,1] <- date_2
}
date_df <- data.frame()
date_o <- strsplit(s2_split3, ",")
for (i in 1:length(date_o[[1]])){
date_1 <- as.character(date_o[[1]][i])
date_2 <- substr(date_1, 2, 16 )
date_df[i,1] <- date_2
}
View(date_df)
View(values_df)
df <- data.frame(date_df[,1], values_df[,1])
names(df) <- c("date", "PM25")
View(df)
# ASIGNAR EL FORMATO DE FECHA
df$date <- as.POSIXct(as.character(df$date), format = "%d/%m/%Y%H:%M")
View(date_df)
View(df)
str(df)
library(DataExplorer)
# RESUMEN DE NUESTROS DATOS
introduce(df)
# VALORES FALTANTES O MISSING
plot_missing(df)
# QQPLOT
plot_qq(df)
# HISTOGRAMA
plot_histogram(df)
# TIME PLOT
timePlot(df, pollutant = "PM25",
ref.y = list(h = 25, lty = 5),
avg.time = "1 day")
library(openair)
# TIME PLOT
timePlot(df, pollutant = "PM25",
ref.y = list(h = 25, lty = 5),
avg.time = "1 day")
# TIME PLOT
timePlot(df, pollutant = "PM25",
ref.y = list(h = 50, lty = 5),
avg.time = "1 day")
# TIME PLOT
timePlot(df, pollutant = "PM25",
ref.y = list(h = 50, lty = 5),
avg.time = "1 day")
# TIME PLOT
timePlot(df, pollutant = "PM25",
ref.y = list(h = 40, lty = 5),
avg.time = "1 day")
ggplot(df, aes(x=date, y=PM25)) +
geom_point() +
geom_line() +
geom_smooth(method = "loess")
ggplot(df, aes(x=date, y=PM25)) +
geom_line()
geom_smooth(method = "loess")
ggplot(df, aes(x=date, y=PM25)) +
geom_line() +
geom_smooth(method = "loess")
ggplot(df, aes(y = PM25)) +
geom_boxplot()
View(df)
library(hydroTSM)
